QUISION NUMBER 1:
DESCRIBTION IN HEBREW , I WILL CHANGE IT SOON :

//NOTES:
		// 1. oNE CITY CAN TALK JUST WITH ONE OTHER cITY
		// 2. ALL THE cITIES MUST BE IN CONTACT, AT LEAST WITH ONE ANOTHER CITY , AND , AT MAXIMUM ONE OTHER cITY
		// 3. THAT INCLUDES CALL OR BEING CALLED
		// 4. CONVERSATIONS OF THE CITIES MUST BE IN THE SAME TIME IN THREADS [	|| IN PARALLEL ||	]
		// 5. IN  "TSFAT"  AND " HAIFA " HAVE HEIGHR PRIORITIES THAN THE OTHERS. 
//	********  THATS MEANS: THE OTHRS CAN'T CALL EACHOTHER / OR THEM  WHEN THEY ARE IN MEETING TOGETHER !!!!
//	********  IF tBERIA AND KARMAIL ARE IN MEETING , THE OTHERS WHICH ARE IN HEIGH PRIORIY CAN BE GO TO MEET IN THE SAME TIME


conditions :
first cndition:

לא נקבעות פגישות בין יותר מ-2 ערים ואף עיר לא יכולה להתקשר בו זמנית ל-2 ערים אחרות – רק לאחת.

exmpl:

כאשר חיפה מתקשרת  לטבריה, רק כרמיאל יכולה להתקשר לצפת או להפך, צפת לכרמיאל.
וכאשר חיפה מתקשרת לכרמיאל, רק צפת יכולה להתקשר לטבריה או להפך, טבריה לצפת.

second important condition:

ויש בעיה נוספת - בצפת ובחיפה הפקידים בכירים יותר מאשר בכרמיאל ובטבריה
, לכן,
כאשר צפת וחיפה מתקשרות אחת לשנייה, טבריה וכרמיאל מחכות להן ולא קובעות פגישות עד שצפת וחיפה יסיימו.
לעומת זאת, אם טבריה מתקשרת לכרמיאל או להפך, צפת וחיפה לא צריכות לחכות לסיום שיחתן.

////////////////////
//DEFINITIONS :
#define KARMAIL 0
#define TBERIA	1
#define HAIFA	2
#define TSFAT	3


// function call  conditions:
1.  city can call just another city in the same time , only calls one!

2. each city must be in contact with all the others cities.

3.  try to do all the calls in parallel style . exmpl [city 1 calls city 2 , in the same time city 3 calls city 4]

4.  must use semaphores and maybe deadlocks, to order their calls.

5.  prototype of " CALLs " : 
                        void Calls(int City1, int City2)


in function "   Func  "  call the function "Calls" after that randomly each time try to call another city number ,                        

 write main who creat 4 threads , each thread for each city , each city must have also her own semaphore ,to order the calls.

threads must work for 20 seconds, use in main sleep(20); after\while joining all the threads , in the end.


////////////////////////////////////////////////////////////////////////////////////////////////////////
// this code must appear in function "CALLs" :

1.  printf("%d started to talk with %d\n", City1, City2); 
2.  sleep(1); 
3.  printf("%d finished to talk with %d\n", City1, City2);

//////////////////////////////////////////////////////////////////////////////////////////////////////////
